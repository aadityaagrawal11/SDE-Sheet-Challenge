/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/
#include<bits/stdc++.h>
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    //    Write your code here.
    vector<int>v;
    if(!root)return v;
    queue<pair<TreeNode<int>*,int>>q;
    map<int,vector<int>>mp;
    q.push({root,0}); // index
    while(!q.empty()){
        TreeNode<int> *cur=q.front().first;
        int hd=q.front().second;
        q.pop();
        mp[hd].push_back(cur->data);
        if(cur->left)q.push({cur->left,hd-1});
        if(cur->right)q.push({cur->right,hd+1});
    }
        for(auto x:mp){
            for(int i=0;i<x.second.size();i++)v.push_back(x.second[i]);
        }
    return v;
}
